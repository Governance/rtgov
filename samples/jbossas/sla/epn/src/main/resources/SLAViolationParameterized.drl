import org.overlord.rtgov.analytics.service.ResponseTime
import org.overlord.rtgov.analytics.situation.Situation

global org.overlord.rtgov.ep.EPContext epc

declare ResponseTime
    @role( event )
end

rule "check for SLA violations"
when
    $rt : ResponseTime() from entry-point "ServiceResponseTimes" 
then
	if ($rt.getServiceType() != null) {
		for (Object obj : (java.util.List)epc.getParameter("levels")) {
			java.util.Map level=(java.util.Map)obj;
			Integer threshold=(Integer)level.get("threshold");
		
			if ($rt.getAverage() > threshold) {
				epc.logError("\r\n\r\n**** RESPONSE TIME "+$rt.getAverage()+"ms EXCEEDED SLA FOR "+$rt.getServiceType()+" ****\r\n");
			
				Situation situation=new Situation();
			
				situation.setType("SLA Violation");
				situation.setSubject(Situation.createSubject($rt.getServiceType(), $rt.getOperation(),
								$rt.getFault()));
				situation.setTimestamp(System.currentTimeMillis());
			
				situation.getProperties().putAll($rt.getProperties());
	
				if ($rt.getRequestId() != null) {
					situation.getActivityTypeIds().add($rt.getRequestId());
				}
				if ($rt.getResponseId() != null) {
					situation.getActivityTypeIds().add($rt.getResponseId());
				}
			
				situation.getContext().addAll($rt.getContext());
			
				String serviceName=$rt.getServiceType();
			
				if (serviceName.startsWith("{")) {
					serviceName = javax.xml.namespace.QName.valueOf(serviceName).getLocalPart();
				}
			
				situation.setDescription(serviceName+" exceeded maximum response time of "+threshold+" ms");
				situation.setSeverity(Situation.Severity.valueOf((String)level.get("severity")));
			
				epc.handle(situation);

				break;
			}
		}
	}

end
